{"ast":null,"code":"var _jsxFileName = \"/home/tanja/Documents/labyrinth/labyrinth/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst size = [4, 6];\nlet lab = [];\n\nfor (let i = 0; i < size[0]; i++) {\n  lab.push([]);\n\n  for (let j = 0; j < size[1]; j++) {\n    lab[i][j] = [0.5 >= Math.random(), 0.5 >= Math.random(), 0.5 >= Math.random(), 0.5 >= Math.random()];\n  }\n}\n\nfunction arrayToClass(array) {\n  let borders = \"field \";\n\n  if (array[0]) {\n    borders += \"border-top \";\n  }\n\n  if (array[1]) {\n    borders += \"border-right \";\n  }\n\n  if (array[2]) {\n    borders += \"border-bottom \";\n  }\n\n  if (array[3]) {\n    borders += \"border-left \";\n  }\n\n  return borders;\n}\n\nclass Field extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: arrayToClass(this.props.borderArray),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, console.log(arrayToClass(this.props.borderArray)));\n  }\n\n}\n\nclass Row extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.row.map(field => React.createElement(Field, {\n      borderArray: field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Lab extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"lab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, lab.map(row => React.createElement(Row, {\n      row: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Lab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanja/Documents/labyrinth/labyrinth/src/App.js"],"names":["React","size","lab","i","push","j","Math","random","arrayToClass","array","borders","Field","Component","render","props","borderArray","console","log","Row","row","map","field","Lab","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAMA,MAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;AAEA,IAAIC,GAAG,GAAG,EAAV;;AAEA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,IAAI,CAAC,CAAD,CAAnB,EAAwBE,CAAC,EAAzB,EAA4B;AACxBD,EAAAA,GAAG,CAACE,IAAJ,CAAS,EAAT;;AAEA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,IAAI,CAAC,CAAD,CAAnB,EAAwBI,CAAC,EAAzB,EAA4B;AACxBH,IAAAA,GAAG,CAACC,CAAD,CAAH,CAAOE,CAAP,IAAY,CAAE,OAAOC,IAAI,CAACC,MAAL,EAAT,EAA0B,OAAOD,IAAI,CAACC,MAAL,EAAjC,EAAkD,OAAOD,IAAI,CAACC,MAAL,EAAzD,EAA0E,OAAOD,IAAI,CAACC,MAAL,EAAjF,CAAZ;AACH;AACJ;;AAGD,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAE1B,MAAIC,OAAO,GAAG,QAAd;;AAEA,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,aAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,eAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,gBAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,cAAX;AACD;;AAED,SAAOA,OAAP;AAED;;AAGD,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAmC;AAEjCC,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,SAAS,EAAGL,YAAY,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACC,GAAR,CAAYT,YAAY,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CAAxB,CADH,CADF;AAMD;;AAVgC;;AAanC,MAAMG,GAAN,SAAkBlB,KAAK,CAACY,SAAxB,CAAiC;AAC/BC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKC,KAAL,CAAWK,GAAX,CAAeC,GAAf,CAAoBC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAFJ,CADF;AAOD;;AAT8B;;AAajC,MAAMC,GAAN,SAAkBtB,KAAK,CAACY,SAAxB,CAAiC;AAE/BC,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIX,GAAG,CAACkB,GAAJ,CAASD,GAAG,IAAI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CAFJ,CADF;AAYD;;AAhB8B;;AAqBjC,SAASI,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\n\n\nconst size = [4, 6];\n\nlet lab = [];\n\nfor(let i=0; i<size[0]; i++){\n    lab.push([]);\n\n    for(let j=0; j<size[1]; j++){\n        lab[i][j] = [(0.5 >= Math.random()), (0.5 >= Math.random()), (0.5 >= Math.random()), (0.5 >= Math.random())];\n    }\n}\n\n\nfunction arrayToClass(array){\n\n  let borders = \"field \";\n  \n  if(array[0]){\n    borders += \"border-top \";\n  }\n  if(array[1]){\n    borders += \"border-right \";\n  }\n  if(array[2]){\n    borders += \"border-bottom \";\n  }\n  if(array[3]){\n    borders += \"border-left \";\n  }\n\n  return(borders);\n\n}\n\n\nclass Field extends React.Component{\n\n  render(){\n    \n    return(\n      <div className={ arrayToClass(this.props.borderArray) }>\n        {console.log(arrayToClass(this.props.borderArray))}\n      </div>\n    )\n\n  }\n}\n\nclass Row extends React.Component{\n  render(){\n    return(\n      <div className=\"row\">\n\n        { this.props.row.map( field => <Field borderArray={field} /> ) }\n\n      </div>\n    )\n  }\n}\n\n\nclass Lab extends React.Component{\n\n  render(){\n\n    return(\n      <div className=\"lab\">\n\n        { lab.map( row => <Row row={row} /> ) }\n\n        {// lab.map(row => row.map( field => <Field borderArray={field} /> ) ) }\n        //{//will need to give keys, not sure how to do that for a matrix, probably row + field as a string\n        }\n\n      </div>\n    )\n\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Lab/>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}