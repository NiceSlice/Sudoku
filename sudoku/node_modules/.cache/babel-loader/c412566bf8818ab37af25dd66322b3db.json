{"ast":null,"code":"var _jsxFileName = \"/home/tanja/Documents/portfolio-project/maze/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction createField(x, y, width, height) {\n  let field = [];\n  field = [0.5 >= Math.random(), 0.5 >= Math.random(), 0.5 >= Math.random(), 0.5 >= Math.random()]; //makes walls on corners and edges of the maze\n\n  if (y === 0) {\n    field[0] = true;\n  }\n\n  if (x === 0) {\n    field[3] = true;\n  }\n\n  if (y === height - 1) {\n    field[2] = true;\n  }\n\n  if (x === width - 1) {\n    field[1] = true;\n  } //eliminates boxes\n\n\n  if (field === [true, true, true, true]) {\n    field = createField(x, y, width, height);\n  }\n\n  return field;\n}\n\nfunction createMaze(width, height) {\n  let maze = [];\n\n  for (let y = 0; y < height; y++) {\n    maze.push([]);\n\n    for (let x = 0; x < width; x++) {\n      maze[y][x] = createField(x, y, width, height);\n    }\n  }\n\n  return maze;\n}\n\nconst maze = createMaze(9, 16);\n\nfunction arrayToClass(array) {\n  let borders = \"field \";\n\n  if (array[0]) {\n    borders += \"border-top \";\n  }\n\n  if (array[1]) {\n    borders += \"border-right \";\n  }\n\n  if (array[2]) {\n    borders += \"border-bottom \";\n  }\n\n  if (array[3]) {\n    borders += \"border-left \";\n  }\n\n  return borders;\n}\n\nclass Field extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: arrayToClass(this.props.borderArray),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, console.log(arrayToClass(this.props.borderArray)));\n  }\n\n}\n\nclass Row extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.row.map(field => React.createElement(Field, {\n      borderArray: field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Maze extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"maze\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, maze.map(row => React.createElement(Row, {\n      row: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Maze, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanja/Documents/portfolio-project/maze/src/App.js"],"names":["React","createField","x","y","width","height","field","Math","random","createMaze","maze","push","arrayToClass","array","borders","Field","Component","render","props","borderArray","console","log","Row","row","map","Maze","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAKA,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2BC,KAA3B,EAAkCC,MAAlC,EAAyC;AACvC,MAAIC,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,GAAG,CAAE,OAAOC,IAAI,CAACC,MAAL,EAAT,EAA0B,OAAOD,IAAI,CAACC,MAAL,EAAjC,EAAkD,OAAOD,IAAI,CAACC,MAAL,EAAzD,EAA0E,OAAOD,IAAI,CAACC,MAAL,EAAjF,CAAR,CAHuC,CAKvC;;AACA,MAAGL,CAAC,KAAG,CAAP,EAAS;AACLG,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,MAAGJ,CAAC,KAAG,CAAP,EAAS;AACLI,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,MAAGH,CAAC,KAAGE,MAAM,GAAC,CAAd,EAAgB;AACZC,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;AACH;;AACD,MAAGJ,CAAC,KAAGE,KAAK,GAAC,CAAb,EAAe;AACXE,IAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;AACH,GAjBsC,CAmBvC;;;AACA,MAAGA,KAAK,KAAK,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAb,EAAsC;AAClCA,IAAAA,KAAK,GAAGL,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,CAAnB;AACH;;AAED,SAAOC,KAAP;AACD;;AAMD,SAASG,UAAT,CAAoBL,KAApB,EAA2BC,MAA3B,EAAkC;AAChC,MAAIK,IAAI,GAAG,EAAX;;AAEA,OAAI,IAAIP,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACE,MAAf,EAAuBF,CAAC,EAAxB,EAA2B;AACvBO,IAAAA,IAAI,CAACC,IAAL,CAAU,EAAV;;AAEA,SAAI,IAAIT,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACE,KAAf,EAAsBF,CAAC,EAAvB,EAA0B;AAEtBQ,MAAAA,IAAI,CAACP,CAAD,CAAJ,CAAQD,CAAR,IAAaD,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,CAAxB;AAEH;AACJ;;AAED,SAAOK,IAAP;AACD;;AAGD,MAAMA,IAAI,GAAGD,UAAU,CAAC,CAAD,EAAI,EAAJ,CAAvB;;AAIA,SAASG,YAAT,CAAsBC,KAAtB,EAA4B;AAE1B,MAAIC,OAAO,GAAG,QAAd;;AAEA,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,aAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,eAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,gBAAX;AACD;;AACD,MAAGD,KAAK,CAAC,CAAD,CAAR,EAAY;AACVC,IAAAA,OAAO,IAAI,cAAX;AACD;;AAED,SAAOA,OAAP;AAED;;AAGD,MAAMC,KAAN,SAAoBf,KAAK,CAACgB,SAA1B,CAAmC;AAEjCC,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,SAAS,EAAGL,YAAY,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACC,GAAR,CAAYT,YAAY,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CAAxB,CADH,CADF;AAMD;;AAVgC;;AAanC,MAAMG,GAAN,SAAkBtB,KAAK,CAACgB,SAAxB,CAAiC;AAC/BC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKC,KAAL,CAAWK,GAAX,CAAeC,GAAf,CAAoBlB,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAFJ,CADF;AAOD;;AAT8B;;AAajC,MAAMmB,IAAN,SAAmBzB,KAAK,CAACgB,SAAzB,CAAkC;AAEhCC,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIP,IAAI,CAACc,GAAL,CAAUD,GAAG,IAAI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,CAFJ,CADF;AAYD;;AAhB+B;;AAqBlC,SAASG,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\n\nfunction createField(x, y, width, height){\n  let field = [];\n\n  field = [(0.5 >= Math.random()), (0.5 >= Math.random()), (0.5 >= Math.random()), (0.5 >= Math.random())];\n\n  //makes walls on corners and edges of the maze\n  if(y===0){\n      field[0] = true;\n  }\n  if(x===0){\n      field[3] = true;\n  }\n  if(y===height-1){\n      field[2] = true;\n  }\n  if(x===width-1){\n      field[1] = true;\n  }\n\n  //eliminates boxes\n  if(field === [true, true, true, true]){\n      field = createField(x, y, width, height);\n  }\n\n  return(field);\n}\n\n\n\n\n\nfunction createMaze(width, height){\n  let maze = [];\n\n  for(let y=0; y<height; y++){\n      maze.push([]);\n\n      for(let x=0; x<width; x++){\n\n          maze[y][x] = createField(x, y, width, height);\n          \n      }\n  }\n\n  return(maze);\n}\n\n\nconst maze = createMaze(9, 16);\n\n\n\nfunction arrayToClass(array){\n\n  let borders = \"field \";\n  \n  if(array[0]){\n    borders += \"border-top \";\n  }\n  if(array[1]){\n    borders += \"border-right \";\n  }\n  if(array[2]){\n    borders += \"border-bottom \";\n  }\n  if(array[3]){\n    borders += \"border-left \";\n  }\n\n  return(borders);\n\n}\n\n\nclass Field extends React.Component{\n\n  render(){\n    \n    return(\n      <div className={ arrayToClass(this.props.borderArray) }>\n        {console.log(arrayToClass(this.props.borderArray))}\n      </div>\n    )\n\n  }\n}\n\nclass Row extends React.Component{\n  render(){\n    return(\n      <div className=\"row\">\n\n        { this.props.row.map( field => <Field borderArray={field} /> ) }\n\n      </div>\n    )\n  }\n}\n\n\nclass Maze extends React.Component{\n\n  render(){\n\n    return(\n      <div className=\"maze\">\n\n        { maze.map( row => <Row row={row} /> ) }\n\n        {// maze.map(row => row.map( field => <Field borderArray={field} /> ) ) }\n        //{//will need to give keys, not sure how to do that for a matrix, probably row + field as a string\n        }\n\n      </div>\n    )\n\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Maze/>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}