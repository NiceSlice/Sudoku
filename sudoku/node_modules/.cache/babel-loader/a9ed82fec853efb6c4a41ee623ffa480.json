{"ast":null,"code":"var _jsxFileName = \"/home/tanja/Documents/portfolio/sudoku-web/sudoku/src/App.js\";\nimport React from 'react';\nimport './App.css'; //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst all = \"Grid 01\\n003020600\\n900305001\\n001806400\\n008102900\\n700000008\\n006708200\\n002609500\\n800203009\\n005010300\\nGrid 02\\n200080300\\n060070084\\n030500209\\n000105408\\n000000000\\n402706000\\n301007040\\n720040060\\n004010003\\nGrid 03\\n000000907\\n000420180\\n000705026\\n100904000\\n050000040\\n000507009\\n920108000\\n034059000\\n507000000\\nGrid 04\\n030050040\\n008010500\\n460000012\\n070502080\\n000603000\\n040109030\\n250000098\\n001020600\\n080060020\\nGrid 05\\n020810740\\n700003100\\n090002805\\n009040087\\n400208003\\n160030200\\n302700060\\n005600008\\n076051090\\nGrid 06\\n100920000\\n524010000\\n000000070\\n050008102\\n000000000\\n402700090\\n060000000\\n000030945\\n000071006\\nGrid 07\\n043080250\\n600000000\\n000001094\\n900004070\\n000608000\\n010200003\\n820500000\\n000000005\\n034090710\\nGrid 08\\n480006902\\n002008001\\n900370060\\n840010200\\n003704100\\n001060049\\n020085007\\n700900600\\n609200018\\nGrid 09\\n000900002\\n050123400\\n030000160\\n908000000\\n070000090\\n000000205\\n091000050\\n007439020\\n400007000\\nGrid 10\\n001900003\\n900700160\\n030005007\\n050000009\\n004302600\\n200000070\\n600100030\\n042007006\\n500006800\\nGrid 11\\n000125400\\n008400000\\n420800000\\n030000095\\n060902010\\n510000060\\n000003049\\n000007200\\n001298000\\nGrid 12\\n062340750\\n100005600\\n570000040\\n000094800\\n400000006\\n005830000\\n030000091\\n006400007\\n059083260\\nGrid 13\\n300000000\\n005009000\\n200504000\\n020000700\\n160000058\\n704310600\\n000890100\\n000067080\\n000005437\\nGrid 14\\n630000000\\n000500008\\n005674000\\n000020000\\n003401020\\n000000345\\n000007004\\n080300902\\n947100080\\nGrid 15\\n000020040\\n008035000\\n000070602\\n031046970\\n200000000\\n000501203\\n049000730\\n000000010\\n800004000\\nGrid 16\\n361025900\\n080960010\\n400000057\\n008000471\\n000603000\\n259000800\\n740000005\\n020018060\\n005470329\\nGrid 17\\n050807020\\n600010090\\n702540006\\n070020301\\n504000908\\n103080070\\n900076205\\n060090003\\n080103040\\nGrid 18\\n080005000\\n000003457\\n000070809\\n060400903\\n007010500\\n408007020\\n901020000\\n842300000\\n000100080\\nGrid 19\\n003502900\\n000040000\\n106000305\\n900251008\\n070408030\\n800763001\\n308000104\\n000020000\\n005104800\\nGrid 20\\n000000000\\n009805100\\n051907420\\n290401065\\n000000000\\n140508093\\n026709580\\n005103600\\n000000000\\nGrid 21\\n020030090\\n000907000\\n900208005\\n004806500\\n607000208\\n003102900\\n800605007\\n000309000\\n030020050\\nGrid 22\\n005000006\\n070009020\\n000500107\\n804150000\\n000803000\\n000092805\\n907006000\\n030400010\\n200000600\\nGrid 23\\n040000050\\n001943600\\n009000300\\n600050002\\n103000506\\n800020007\\n005000200\\n002436700\\n030000040\\nGrid 24\\n004000000\\n000030002\\n390700080\\n400009001\\n209801307\\n600200008\\n010008053\\n900040000\\n000000800\\nGrid 25\\n360020089\\n000361000\\n000000000\\n803000602\\n400603007\\n607000108\\n000000000\\n000418000\\n970030014\\nGrid 26\\n500400060\\n009000800\\n640020000\\n000001008\\n208000501\\n700500000\\n000090084\\n003000600\\n060003002\\nGrid 27\\n007256400\\n400000005\\n010030060\\n000508000\\n008060200\\n000107000\\n030070090\\n200000004\\n006312700\\nGrid 28\\n000000000\\n079050180\\n800000007\\n007306800\\n450708096\\n003502700\\n700000005\\n016030420\\n000000000\\nGrid 29\\n030000080\\n009000500\\n007509200\\n700105008\\n020090030\\n900402001\\n004207100\\n002000800\\n070000090\\nGrid 30\\n200170603\\n050000100\\n000006079\\n000040700\\n000801000\\n009050000\\n310400000\\n005000060\\n906037002\\nGrid 31\\n000000080\\n800701040\\n040020030\\n374000900\\n000030000\\n005000321\\n010060050\\n050802006\\n080000000\\nGrid 32\\n000000085\\n000210009\\n960080100\\n500800016\\n000000000\\n890006007\\n009070052\\n300054000\\n480000000\\nGrid 33\\n608070502\\n050608070\\n002000300\\n500090006\\n040302050\\n800050003\\n005000200\\n010704090\\n409060701\\nGrid 34\\n050010040\\n107000602\\n000905000\\n208030501\\n040070020\\n901080406\\n000401000\\n304000709\\n020060010\\nGrid 35\\n053000790\\n009753400\\n100000002\\n090080010\\n000907000\\n080030070\\n500000003\\n007641200\\n061000940\\nGrid 36\\n006080300\\n049070250\\n000405000\\n600317004\\n007000800\\n100826009\\n000702000\\n075040190\\n003090600\\nGrid 37\\n005080700\\n700204005\\n320000084\\n060105040\\n008000500\\n070803010\\n450000091\\n600508007\\n003010600\\nGrid 38\\n000900800\\n128006400\\n070800060\\n800430007\\n500000009\\n600079008\\n090004010\\n003600284\\n001007000\\nGrid 39\\n000080000\\n270000054\\n095000810\\n009806400\\n020403060\\n006905100\\n017000620\\n460000038\\n000090000\\nGrid 40\\n000602000\\n400050001\\n085010620\\n038206710\\n000000000\\n019407350\\n026040530\\n900020007\\n000809000\\nGrid 41\\n000900002\\n050123400\\n030000160\\n908000000\\n070000090\\n000000205\\n091000050\\n007439020\\n400007000\\nGrid 42\\n380000000\\n000400785\\n009020300\\n060090000\\n800302009\\n000040070\\n001070500\\n495006000\\n000000092\\nGrid 43\\n000158000\\n002060800\\n030000040\\n027030510\\n000000000\\n046080790\\n050000080\\n004070100\\n000325000\\nGrid 44\\n010500200\\n900001000\\n002008030\\n500030007\\n008000500\\n600080004\\n040100700\\n000700006\\n003004050\\nGrid 45\\n080000040\\n000469000\\n400000007\\n005904600\\n070608030\\n008502100\\n900000005\\n000781000\\n060000010\\nGrid 46\\n904200007\\n010000000\\n000706500\\n000800090\\n020904060\\n040002000\\n001607000\\n000000030\\n300005702\\nGrid 47\\n000700800\\n006000031\\n040002000\\n024070000\\n010030080\\n000060290\\n000800070\\n860000500\\n002006000\\nGrid 48\\n001007090\\n590080001\\n030000080\\n000005800\\n050060020\\n004100000\\n080000030\\n100020079\\n020700400\\nGrid 49\\n000003017\\n015009008\\n060000000\\n100007000\\n009000200\\n000500004\\n000000020\\n500600340\\n340200000\\nGrid 50\\n300200000\\n000107000\\n706030500\\n070009080\\n900020004\\n010800050\\n009040301\\n000702000\\n000008006\";\nlet sudokus = [];\nlet n = 0;\n\nfor (let a = 0; a < 50; a++) {\n  n += 8; //skiping over text line\n\n  sudokus.push([]); //creating one sudoku array\n\n  for (let b = 0; b < 9; b++) {\n    //adding one row\n    sudokus[a].push([]);\n\n    for (let c = 0; c < 9; c++) {\n      sudokus[a][b].push(parseInt(all[n]));\n      n++;\n    }\n\n    n++;\n  }\n} //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction rowDataUpdate(sudoku, field, oldData) {\n  //field wil be an array [x, y]\n  let n;\n  let update = [];\n\n  for (let x = 0; x < 9; x++) {\n    n = sudoku[field[1]][x];\n\n    if (n !== 0 && !oldData.includes(n)) {\n      update.push(n);\n    }\n  }\n\n  return update;\n}\n\nfunction columnDataUpdate(sudoku, field, oldData) {\n  let n;\n  let update = [];\n\n  for (let y = 0; y < 9; y++) {\n    n = sudoku[y][field[0]];\n\n    if (n !== 0 && !oldData.includes(n)) {\n      update.push(n);\n    }\n  }\n\n  return update;\n}\n\nfunction squareDataUpdate(sudoku, field, oldData) {\n  const xr = field[0] % 3;\n  const yr = field[1] % 3;\n  let n;\n  let update = [];\n  n = sudoku[field[1] - yr][field[0] - xr]; //row\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr][field[0] - xr + 1];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr][field[0] - xr + 2];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 1][field[0] - xr]; //row\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 1][field[0] - xr + 1];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 1][field[0] - xr + 2];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 2][field[0] - xr]; //row\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 2][field[0] - xr + 1];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  n = sudoku[field[1] - yr + 2][field[0] - xr + 2];\n\n  if (n !== 0 && !oldData.includes(n) && !update.includes(n)) {\n    update.push(n);\n  }\n\n  return update;\n}\n\nfunction update(sudoku, field, oldData) {\n  let update = rowDataUpdate(sudoku, field, oldData);\n  update = update.concat(columnDataUpdate(sudoku, field, update.concat(oldData)));\n  update = update.concat(squareDataUpdate(sudoku, field, update.concat(oldData)));\n  return update;\n}\n\nfunction returnMissing(array) {\n  //to be used on tracker\n  let missing = [];\n\n  for (let i = 1; i < 10; i++) {\n    if (!array.includes(i)) {\n      missing.push(i);\n    }\n  }\n\n  return missing;\n}\n\nfunction findStandard(tracker, sudoku) {\n  let standard = -1;\n\n  for (let y = 0; y < 9; y++) {\n    for (let x = 0; x < 9; x++) {\n      if (sudoku[y][x] === 0) {\n        if (tracker[\"field\" + x.toString() + y.toString()].length > standard && tracker[\"field\" + x.toString() + y.toString()] !== \"filled\") {\n          standard = tracker[\"field\" + x.toString() + y.toString()].length;\n        }\n      }\n    }\n  }\n\n  if (standard === -1) {\n    standard = \"filled\";\n  }\n\n  return standard;\n}\n\nfunction trackAll(sudoku, oldTracker) {\n  let tracker = oldTracker;\n\n  for (let y = 0; y < 9; y++) {\n    for (let x = 0; x < 9; x++) {\n      if (sudoku[y][x] === 0) {\n        let news = update(sudoku, [x, y], tracker[\"field\" + x.toString() + y.toString()]);\n        tracker[\"field\" + x.toString() + y.toString()] = tracker[\"field\" + x.toString() + y.toString()].concat(news);\n      } else {\n        tracker[\"field\" + x.toString() + y.toString()] = \"filled\";\n      }\n    }\n  }\n\n  return tracker;\n} //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction solve(unsolvedSudoku, array) {\n  let sudoku = JSON.parse(JSON.stringify(unsolvedSudoku));\n  let process = JSON.parse(JSON.stringify(array));\n  let tracker = {};\n\n  for (let y = 0; y < 9; y++) {\n    for (let x = 0; x < 9; x++) {\n      tracker[\"field\" + x.toString() + y.toString()] = [];\n    }\n  }\n\n  tracker = trackAll(sudoku, tracker);\n  let standard = findStandard(tracker, sudoku);\n\n  if (standard === 10) {\n    return false;\n  }\n\n  while (standard !== \"filled\") {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        if (sudoku[y][x] === 0 && tracker[\"field\" + x.toString() + y.toString()].length === standard) {\n          let missing = returnMissing(tracker[\"field\" + x.toString() + y.toString()]);\n          let deadEnd = true;\n\n          for (let i in missing) {\n            sudoku[y][x] = missing[i];\n            process.push(JSON.parse(JSON.stringify(sudoku)));\n            let result = solve(sudoku, process);\n\n            if (result !== false) {\n              deadEnd = false;\n              sudoku = result[0];\n              tracker = trackAll(sudoku, tracker);\n              process = result[1];\n              break;\n            } else {\n              sudoku[y][x] = 0;\n            }\n          }\n\n          if (deadEnd) {\n            return false;\n          }\n        }\n      }\n    }\n\n    standard = findStandard(tracker, sudoku);\n  }\n\n  return [sudoku, process];\n}\n\nconst example = [[0, 0, 3, 0, 2, 0, 6, 0, 0], [9, 0, 0, 3, 0, 5, 0, 0, 1], [0, 0, 1, 8, 0, 6, 4, 0, 0], [0, 0, 8, 1, 0, 2, 9, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 8], [0, 0, 6, 7, 0, 8, 2, 0, 0], [0, 0, 2, 6, 0, 9, 5, 0, 0], [8, 0, 0, 2, 0, 3, 0, 0, 9], [0, 0, 5, 0, 1, 0, 3, 0, 0]];\n\nclass RowOfFields extends React.Component {\n  render() {\n    let row = [];\n\n    for (let i in this.props.row) {\n      if (this.props.row[i] === 0) {\n        row.push(\"\");\n      } else {\n        row.push(this.props.row[i]);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, row[0]), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, row[1]), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, row[2]));\n  }\n\n}\n\nclass RowOfSquares extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }, \" \", React.createElement(RowOfFields, {\n      row: [this.props.row[0][0], this.props.row[0][1], this.props.row[0][2]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[1][0], this.props.row[1][1], this.props.row[1][2]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[2][0], this.props.row[2][1], this.props.row[2][2]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }, \" \", React.createElement(RowOfFields, {\n      row: [this.props.row[0][3], this.props.row[0][4], this.props.row[0][5]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[1][3], this.props.row[1][4], this.props.row[1][5]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[2][3], this.props.row[2][4], this.props.row[2][5]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }, \" \", React.createElement(RowOfFields, {\n      row: [this.props.row[0][6], this.props.row[0][7], this.props.row[0][8]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[1][6], this.props.row[1][7], this.props.row[1][8]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }), React.createElement(RowOfFields, {\n      row: [this.props.row[2][6], this.props.row[2][7], this.props.row[2][8]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nclass Sudoku extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sudoku\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }, React.createElement(RowOfSquares, {\n      row: [this.props.sudoku[0], this.props.sudoku[1], this.props.sudoku[2]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822\n      },\n      __self: this\n    }), React.createElement(RowOfSquares, {\n      row: [this.props.sudoku[3], this.props.sudoku[4], this.props.sudoku[5]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }), React.createElement(RowOfSquares, {\n      row: [this.props.sudoku[6], this.props.sudoku[7], this.props.sudoku[8]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Button extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"Solve\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"button\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      button: \"Solve\",\n      current: 5,\n      sudoku: sudokus[5]\n    };\n\n    this.onClick = () => {\n      if (this.state.button === \"Solve\") {\n        this.setState({\n          button: \"Solving...\"\n        });\n        const process = solve(this.state.sudoku, [])[1];\n\n        for (let i in process) {\n          setTimeout(() => {\n            this.setState({\n              sudoku: process[i]\n            });\n\n            if (parseInt(i) === process.length - 1) {\n              this.setState({\n                button: \"Next\"\n              });\n            }\n          }, 2 * (i + 1));\n        }\n      }\n\n      if (this.state.button === \"Next\") {\n        console.log(\"in work\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }, React.createElement(Sudoku, {\n      sudoku: this.state.sudoku,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }, this.state.button));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tanja/Documents/portfolio/sudoku-web/sudoku/src/App.js"],"names":["React","all","sudokus","n","a","push","b","c","parseInt","rowDataUpdate","sudoku","field","oldData","update","x","includes","columnDataUpdate","y","squareDataUpdate","xr","yr","concat","returnMissing","array","missing","i","findStandard","tracker","standard","toString","length","trackAll","oldTracker","news","solve","unsolvedSudoku","JSON","parse","stringify","process","deadEnd","result","example","RowOfFields","Component","render","row","props","RowOfSquares","Sudoku","Button","state","text","onClick","children","App","button","current","setState","setTimeout","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst all = `Grid 01\n003020600\n900305001\n001806400\n008102900\n700000008\n006708200\n002609500\n800203009\n005010300\nGrid 02\n200080300\n060070084\n030500209\n000105408\n000000000\n402706000\n301007040\n720040060\n004010003\nGrid 03\n000000907\n000420180\n000705026\n100904000\n050000040\n000507009\n920108000\n034059000\n507000000\nGrid 04\n030050040\n008010500\n460000012\n070502080\n000603000\n040109030\n250000098\n001020600\n080060020\nGrid 05\n020810740\n700003100\n090002805\n009040087\n400208003\n160030200\n302700060\n005600008\n076051090\nGrid 06\n100920000\n524010000\n000000070\n050008102\n000000000\n402700090\n060000000\n000030945\n000071006\nGrid 07\n043080250\n600000000\n000001094\n900004070\n000608000\n010200003\n820500000\n000000005\n034090710\nGrid 08\n480006902\n002008001\n900370060\n840010200\n003704100\n001060049\n020085007\n700900600\n609200018\nGrid 09\n000900002\n050123400\n030000160\n908000000\n070000090\n000000205\n091000050\n007439020\n400007000\nGrid 10\n001900003\n900700160\n030005007\n050000009\n004302600\n200000070\n600100030\n042007006\n500006800\nGrid 11\n000125400\n008400000\n420800000\n030000095\n060902010\n510000060\n000003049\n000007200\n001298000\nGrid 12\n062340750\n100005600\n570000040\n000094800\n400000006\n005830000\n030000091\n006400007\n059083260\nGrid 13\n300000000\n005009000\n200504000\n020000700\n160000058\n704310600\n000890100\n000067080\n000005437\nGrid 14\n630000000\n000500008\n005674000\n000020000\n003401020\n000000345\n000007004\n080300902\n947100080\nGrid 15\n000020040\n008035000\n000070602\n031046970\n200000000\n000501203\n049000730\n000000010\n800004000\nGrid 16\n361025900\n080960010\n400000057\n008000471\n000603000\n259000800\n740000005\n020018060\n005470329\nGrid 17\n050807020\n600010090\n702540006\n070020301\n504000908\n103080070\n900076205\n060090003\n080103040\nGrid 18\n080005000\n000003457\n000070809\n060400903\n007010500\n408007020\n901020000\n842300000\n000100080\nGrid 19\n003502900\n000040000\n106000305\n900251008\n070408030\n800763001\n308000104\n000020000\n005104800\nGrid 20\n000000000\n009805100\n051907420\n290401065\n000000000\n140508093\n026709580\n005103600\n000000000\nGrid 21\n020030090\n000907000\n900208005\n004806500\n607000208\n003102900\n800605007\n000309000\n030020050\nGrid 22\n005000006\n070009020\n000500107\n804150000\n000803000\n000092805\n907006000\n030400010\n200000600\nGrid 23\n040000050\n001943600\n009000300\n600050002\n103000506\n800020007\n005000200\n002436700\n030000040\nGrid 24\n004000000\n000030002\n390700080\n400009001\n209801307\n600200008\n010008053\n900040000\n000000800\nGrid 25\n360020089\n000361000\n000000000\n803000602\n400603007\n607000108\n000000000\n000418000\n970030014\nGrid 26\n500400060\n009000800\n640020000\n000001008\n208000501\n700500000\n000090084\n003000600\n060003002\nGrid 27\n007256400\n400000005\n010030060\n000508000\n008060200\n000107000\n030070090\n200000004\n006312700\nGrid 28\n000000000\n079050180\n800000007\n007306800\n450708096\n003502700\n700000005\n016030420\n000000000\nGrid 29\n030000080\n009000500\n007509200\n700105008\n020090030\n900402001\n004207100\n002000800\n070000090\nGrid 30\n200170603\n050000100\n000006079\n000040700\n000801000\n009050000\n310400000\n005000060\n906037002\nGrid 31\n000000080\n800701040\n040020030\n374000900\n000030000\n005000321\n010060050\n050802006\n080000000\nGrid 32\n000000085\n000210009\n960080100\n500800016\n000000000\n890006007\n009070052\n300054000\n480000000\nGrid 33\n608070502\n050608070\n002000300\n500090006\n040302050\n800050003\n005000200\n010704090\n409060701\nGrid 34\n050010040\n107000602\n000905000\n208030501\n040070020\n901080406\n000401000\n304000709\n020060010\nGrid 35\n053000790\n009753400\n100000002\n090080010\n000907000\n080030070\n500000003\n007641200\n061000940\nGrid 36\n006080300\n049070250\n000405000\n600317004\n007000800\n100826009\n000702000\n075040190\n003090600\nGrid 37\n005080700\n700204005\n320000084\n060105040\n008000500\n070803010\n450000091\n600508007\n003010600\nGrid 38\n000900800\n128006400\n070800060\n800430007\n500000009\n600079008\n090004010\n003600284\n001007000\nGrid 39\n000080000\n270000054\n095000810\n009806400\n020403060\n006905100\n017000620\n460000038\n000090000\nGrid 40\n000602000\n400050001\n085010620\n038206710\n000000000\n019407350\n026040530\n900020007\n000809000\nGrid 41\n000900002\n050123400\n030000160\n908000000\n070000090\n000000205\n091000050\n007439020\n400007000\nGrid 42\n380000000\n000400785\n009020300\n060090000\n800302009\n000040070\n001070500\n495006000\n000000092\nGrid 43\n000158000\n002060800\n030000040\n027030510\n000000000\n046080790\n050000080\n004070100\n000325000\nGrid 44\n010500200\n900001000\n002008030\n500030007\n008000500\n600080004\n040100700\n000700006\n003004050\nGrid 45\n080000040\n000469000\n400000007\n005904600\n070608030\n008502100\n900000005\n000781000\n060000010\nGrid 46\n904200007\n010000000\n000706500\n000800090\n020904060\n040002000\n001607000\n000000030\n300005702\nGrid 47\n000700800\n006000031\n040002000\n024070000\n010030080\n000060290\n000800070\n860000500\n002006000\nGrid 48\n001007090\n590080001\n030000080\n000005800\n050060020\n004100000\n080000030\n100020079\n020700400\nGrid 49\n000003017\n015009008\n060000000\n100007000\n009000200\n000500004\n000000020\n500600340\n340200000\nGrid 50\n300200000\n000107000\n706030500\n070009080\n900020004\n010800050\n009040301\n000702000\n000008006`\n\nlet sudokus = [];\n\nlet n = 0;\nfor(let a=0; a<50; a++){\n    n += 8;//skiping over text line\n    sudokus.push([]);//creating one sudoku array\n\n    for(let b = 0; b < 9; b++){//adding one row\n        sudokus[a].push([]);\n\n        for(let c = 0; c < 9; c++){\n            sudokus[a][b].push( parseInt(all[n]) );\n            n++;\n        }\n\n        n++;\n\n    }\n    \n\n\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction rowDataUpdate(sudoku, field, oldData){//field wil be an array [x, y]\n  let n;\n  let update = [];\n\n  for(let x = 0; x < 9; x++){\n      n = sudoku[field[1]][x];\n      if(n !== 0 && !(oldData.includes(n))){\n          update.push(n);\n      }\n  }\n\n  return(update);\n}\n\nfunction columnDataUpdate(sudoku, field, oldData){\n  let n;\n  let update = [];\n\n  for(let y = 0; y < 9; y++){\n      n = sudoku[y][field[0]];\n      if(n !== 0 && !(oldData.includes(n))){\n          update.push(n);\n      }\n  }\n\n  return(update);\n}\n\nfunction squareDataUpdate(sudoku, field, oldData){\n\n  const xr = field[0]%3;\n  const yr = field[1]%3;\n  \n  let n;\n  let update = [];\n\n  n = sudoku[ field[1] - yr ][ field[0] - xr ];//row\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr ][ field[0] - xr + 1 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr ][ field[0] - xr + 2 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n\n  n = sudoku[ field[1] - yr + 1 ][ field[0] - xr ];//row\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr + 1 ][ field[0] - xr + 1 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr + 1 ][ field[0] - xr + 2 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n\n  n = sudoku[ field[1] - yr + 2 ][ field[0] - xr ];//row\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr + 2 ][ field[0] - xr + 1 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n  n = sudoku[ field[1] - yr + 2 ][ field[0] - xr + 2 ];\n  if(n !== 0 && !(oldData.includes(n)) && !(update.includes(n))){\n      update.push(n);\n  }\n\n  return(update);\n}\n\nfunction update(sudoku, field, oldData){\n\n  let update = rowDataUpdate(sudoku, field, oldData);\n\n  update = update.concat(columnDataUpdate(sudoku, field, update.concat(oldData) ));\n\n  update = update.concat(squareDataUpdate(sudoku, field, update.concat(oldData) ));\n\n  return(update);\n}\n\n\nfunction returnMissing(array){//to be used on tracker\n  let missing = []\n\n  for(let i = 1; i < 10; i++){\n      if(!(array.includes(i))){\n          missing.push(i);\n      }\n  }\n\n  return(missing);\n}\n\nfunction findStandard(tracker, sudoku){\n  let standard = -1;\n  \n  for(let y = 0; y < 9; y++){\n      for(let x = 0; x < 9; x++){\n\n          if(sudoku[y][x] === 0){\n\n              if(tracker[\"field\" + x.toString() + y.toString()].length > standard && tracker[\"field\" + x.toString() + y.toString()] !== \"filled\"){\n                  standard = tracker[\"field\" + x.toString() + y.toString()].length;\n              }\n          }\n      }\n  }\n\n  if(standard === -1){\n      standard = \"filled\";\n  }\n\n  return(standard);\n}\n\nfunction trackAll(sudoku, oldTracker){\n  let tracker = oldTracker;\n\n  for(let y = 0; y < 9; y++){\n\n      for(let x = 0; x < 9; x++){\n\n          if(sudoku[y][x] === 0){\n\n              let news = update(sudoku, [x, y], tracker[\"field\" + x.toString() + y.toString()]);\n              tracker[\"field\" + x.toString() + y.toString()] = tracker[\"field\" + x.toString() + y.toString()].concat(news);\n\n          } else{\n              tracker[\"field\" + x.toString() + y.toString()] = \"filled\";\n          }\n\n      }\n\n  }\n  \n  return(tracker);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\nfunction solve(unsolvedSudoku, array){\n\n    \n  let sudoku = JSON.parse(JSON.stringify(unsolvedSudoku));\n  let process = JSON.parse(JSON.stringify(array));\n\n\n  let tracker = {};\n  for(let y = 0; y < 9; y++){\n      for(let x = 0; x < 9; x++){\n          tracker[\"field\" + x.toString() + y.toString()] = [];\n      }\n  }\n\n  tracker = trackAll(sudoku, tracker);\n\n  let standard = findStandard(tracker, sudoku);\n  if(standard === 10){ return(false); }\n\n\n  while(standard !== \"filled\"){\n\n      for(let y = 0; y < 9; y++){\n          for(let x = 0; x < 9; x++){\n\n              if(sudoku[y][x] === 0 && tracker[\"field\" + x.toString() + y.toString()].length === standard){\n                  let missing = returnMissing( tracker[\"field\" + x.toString() + y.toString()] );\n                  let deadEnd = true;\n\n                  for(let i in missing){\n\n                      sudoku[y][x] = missing[i];\n                      process.push(JSON.parse(JSON.stringify(sudoku)));\n                      let result = solve(sudoku, process);\n\n                      \n                      if(result !== false){\n                          deadEnd = false;\n                          sudoku = result[0];\n                          tracker = trackAll(sudoku, tracker);\n                          process = result[1];\n                          break;\n                      } else{\n                          sudoku[y][x] = 0;\n                      }\n                      \n\n                  }\n\n                  if(deadEnd){\n                      return(false);\n                  }\n\n              }\n\n          }\n      }\n\n      standard = findStandard(tracker, sudoku);\n      }\n\n  return([sudoku, process]);\n}\n\n\n\n\n\n\n\n\nconst example = [ [0, 0, 3, 0, 2, 0, 6, 0, 0], [9, 0, 0, 3, 0, 5, 0, 0, 1], [0, 0, 1, 8, 0, 6, 4, 0, 0], [0, 0, 8, 1, 0, 2, 9, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 8], [0, 0, 6, 7, 0, 8, 2, 0, 0], [0, 0, 2, 6, 0, 9, 5, 0, 0], [8, 0, 0, 2, 0, 3, 0, 0, 9], [0, 0, 5, 0, 1, 0, 3, 0, 0] ];\n\n\n\nclass RowOfFields extends React.Component{\n\n  render(){\n\n    let row = [];\n\n    for(let i in this.props.row){\n      if(this.props.row[i] === 0){\n        row.push(\"\");\n      }\n      else{\n        row.push(this.props.row[i]);\n      }\n    }\n\n    return(\n      <div className=\"row\">\n\n        <div className=\"field\">{row[0]}</div>\n        <div className=\"field\">{row[1]}</div>\n        <div className=\"field\">{row[2]}</div>\n\n      </div>\n    )\n  }\n}\n\n\nclass RowOfSquares extends React.Component{\n\n  render(){\n\n    return(\n      <div className=\"row\">\n\n        <div className=\"square\"> <RowOfFields row = {[ this.props.row[0][0], this.props.row[0][1], this.props.row[0][2] ]} />\n                                 <RowOfFields row = {[ this.props.row[1][0], this.props.row[1][1], this.props.row[1][2] ]} />\n                                 <RowOfFields row = {[ this.props.row[2][0], this.props.row[2][1], this.props.row[2][2] ]} /> </div>\n\n        <div className=\"square\"> <RowOfFields row = {[ this.props.row[0][3], this.props.row[0][4], this.props.row[0][5] ]} />\n                                 <RowOfFields row = {[ this.props.row[1][3], this.props.row[1][4], this.props.row[1][5] ]} />\n                                 <RowOfFields row = {[ this.props.row[2][3], this.props.row[2][4], this.props.row[2][5] ]} /> </div>\n\n        <div className=\"square\"> <RowOfFields row = {[ this.props.row[0][6], this.props.row[0][7], this.props.row[0][8] ]} />\n                                 <RowOfFields row = {[ this.props.row[1][6], this.props.row[1][7], this.props.row[1][8] ]} />\n                                 <RowOfFields row = {[ this.props.row[2][6], this.props.row[2][7], this.props.row[2][8] ]} /> </div>\n\n\n      </div>\n    )\n  }\n}\n\n\nclass Sudoku extends React.Component{\n\n  render(){\n\n    return(\n      <div className=\"sudoku\">\n        \n        <RowOfSquares row = {[this.props.sudoku[0], this.props.sudoku[1], this.props.sudoku[2]]} />\n        <RowOfSquares row = {[this.props.sudoku[3], this.props.sudoku[4], this.props.sudoku[5]]} />\n        <RowOfSquares row = {[this.props.sudoku[6], this.props.sudoku[7], this.props.sudoku[8]]} />\n\n      </div>\n    )\n\n  }\n}\n\n\nclass Button extends React.Component{\n  state = {\n    text: \"Solve\"\n  }\n\n  render(){\n    return(\n      <div className=\"button\" onClick={this.props.onClick} >{this.props.children}</div>\n    )\n  }\n}\n\n\nclass App extends React.Component{\n  state = {\n    button: \"Solve\",\n    current: 5,\n    sudoku: sudokus[5]\n  }\n\n  onClick = () => {\n\n    if(this.state.button === \"Solve\"){\n\n      this.setState({ button: \"Solving...\" });\n\n      const process = solve(this.state.sudoku, [])[1];\n\n      \n\n\n      for(let i in process){\n\n        setTimeout(() => {\n          this.setState({ sudoku: process[i] });\n          if(parseInt(i) === process.length-1){\n            this.setState({ button: \"Next\" });\n          } \n      \n        }, 2 * (i+1));\n\n      }\n\n    }\n\n\n    if(this.state.button === \"Next\"){\n      console.log(\"in work\");\n    }\n\n  }\n\n  render(){\n\n    return (\n      <div className=\"App\">\n\n        <Sudoku sudoku={this.state.sudoku}/>\n\n        <Button onClick={this.onClick} >{this.state.button}</Button>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}